<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	xsi:schemaLocation="
            http://www.springframework.org/schema/beans
                http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
            http://www.springframework.org/schema/context
                http://www.springframework.org/schema/context/spring-context-3.2.xsd
            http://www.springframework.org/schema/rabbit
                http://www.springframework.org/schema/rabbit/spring-rabbit-1.3.xsd
            http://www.springframework.org/schema/task 
            	http://www.springframework.org/schema/task/spring-task.xsd
                ">
	<!-- 以下是生产端 -->
	<!-- 连接服务配置  -->
	<rabbit:connection-factory id="connectionFactory" host="127.0.0.1" username="guest" password="guest" port="5672" publisher-confirms="true" />
	<rabbit:admin connection-factory="connectionFactory" />
	<!-- queue 队列声明-->
	<rabbit:queue id="queue_1_k" durable="true" auto-delete="false" exclusive="false" name="queue_1_k" />
	<!-- exchange queue binging key 绑定 -->
	<rabbit:direct-exchange name="my-mq-exchange" durable="true" auto-delete="false" id="my-mq-exchange">
		<rabbit:bindings>
			<rabbit:binding queue="queue_1_k" key="queue_1_k" />
		</rabbit:bindings>
	</rabbit:direct-exchange>

	<!-- spring amqp默认的是jackson 的一个插件,目的将生产者生产的数据转换为json存入消息队列，由于fastjson的速度快于jackson,这里替换为fastjson的一个实现 -->
	<bean id="jsonMessageConverter" class="jehc.xtmodules.xtcore.mq.rabbit.common.FastJsonMessageConverter" />

	<!-- spring template声明-->
	<rabbit:template exchange="my-mq-exchange" id="amqpTemplate" connection-factory="connectionFactory" message-converter="jsonMessageConverter" />

	<!-- 以下是消费端 -->
	<!-- 连接服务配置  -->
	<rabbit:connection-factory id="connectionFactoryC" host="127.0.0.1" username="guest" password="guest" port="5672" />

	<!--  线程池（执行器）
		<task:executor id="taskExecutor" pool-size="1-4" queue-capacity="128" />
	-->
	<bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<!-- 核心线程数 -->
		<property name="corePoolSize" value="5" />
		<!-- 最大线程数 -->
		<property name="maxPoolSize" value="50" />
		<!-- 队列最大长度 -->
		<property name="queueCapacity" value="1000" />
		<!-- 线程池维护线程所允许的空闲时间，默认为60s -->
		<property name="keepAliveSeconds" value="60" />
	</bean>

	<!-- 默认消息处理类，可以重写 -->
	<!-- 
	<bean id="messageHandler" class="jehc.xtmodules.xtcore.mq.rabbit.MessageHandler"></bean>   
	-->
	<bean id="QueueLitener" class="jehc.xtmodules.xtcore.mq.rabbit.QueueLitener"></bean>

	<!-- 用于消息的监听的代理类MessageListenerAdapter -->
	<bean id="messageQueueListenerAdapter" class="org.springframework.amqp.rabbit.listener.adapter.MessageListenerAdapter">
		<constructor-arg ref="QueueLitener" />
		<property name="defaultListenerMethod" value="handleMessage"></property>
	</bean>
	<bean id="rabbitTxManage" class="org.springframework.amqp.rabbit.transaction.RabbitTransactionManager">
		<property name="connectionFactory" ref="connectionFactoryC"></property>
	</bean>
	<!-- queue litener  观察 监听模式 当有消息到达时会通知监听在对应的队列上的监听对象-->
	<rabbit:listener-container connection-factory="connectionFactoryC" acknowledge="auto" task-executor="taskExecutor" transaction-manager="rabbitTxManage" channel-transacted="true">
		<rabbit:listener queues="queue_1_k" ref="messageQueueListenerAdapter" />
	</rabbit:listener-container>
</beans>