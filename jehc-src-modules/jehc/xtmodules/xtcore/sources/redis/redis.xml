<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:cache='http://www.springframework.org/schema/cache'  
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
			http://www.springframework.org/schema/tx
			http://www.springframework.org/schema/tx/spring-tx-2.0.xsd 
			http://www.springframework.org/schema/aop 
			http://www.springframework.org/schema/aop/spring-aop-2.0.xsd 
			http://mybatis.org/schema/mybatis-spring 
			http://mybatis.org/schema/mybatis-spring-1.2.xsd 
			http://www.springframework.org/schema/context 
			http://www.springframework.org/schema/context/spring-context-3.0.xsd
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd  
	        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd  
	        http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">
	 <cache:annotation-driven cache-manager="redisCacheManager"/>  
	 <!-- 该位置一定要放在该处 否则报错 -->
	 <bean id="redisCacheManager" class="org.springframework.cache.support.SimpleCacheManager">    
         <property name="caches">    
            <set>    
                <bean class="jehc.xtmodules.xtcore.cache.RedisCache">    
                     <property name="redisTemplate" ref="redisTemplate" />   
                     <property name="name" value="UsingCache"/>  
                     <!-- UsingCachefa放在类或方法的注解中使用 
                     	如在类上：
                     			@Cacheable(value="UsingCache")
								public class Xt_UserinfoServiceImpl{}
								
						在方法上:
								@Cacheable(value="UsingCache")
								public Xt_Userinfo getXtUserinfoById(String xt_userinfo_id){}
                     -->
                </bean>  
            </set>    
         </property>    
     </bean>
     <!-- 配置redis连接池  JedisPoolConfig-->
     <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="${pool.maxTotal}" />
		<property name="maxIdle" value="${pool.maxIdle}" />
		<property name="minIdle" value="${pool.minIdle}" />
     </bean> 
     <!-- 配置CoonnectionFactory JedisConnectionFactory-->
     <bean id="connFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
          <property name="hostName" value="${redis.host}"></property>
          <property name="port" value="${redis.port}"></property>
          <property name="poolConfig" ref="poolConfig"></property>
     </bean>
     <!-- 配置redisTemplate StringRedisTemplate-->
     <bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
        <property name="connectionFactory" ref="connFactory"/>
     </bean>
     
     
     
     
     <!-- 方式一采用 -->
    <!-- 使用spring-session把http session放到redis里 -->
    <!-- 设置cookieName和path -->
    <bean id="defaultCookieSerializer" class="org.springframework.session.web.http.DefaultCookieSerializer">  
      <property name="cookiePath" value="/" />  
    </bean>  
    <bean id="cookieHttpSessionStrategy"  class="org.springframework.session.web.http.CookieHttpSessionStrategy">  
        <property name="cookieSerializer" ref="defaultCookieSerializer" />  
    </bean> 
    <bean id="redisHttpSessionConfiguration" class="org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration">
        <property name="maxInactiveIntervalInSeconds" value="${session.maxInactiveIntervalInSeconds}" />
        <property name="httpSessionStrategy" ref="cookieHttpSessionStrategy"/>
    </bean>
    
    
    <!-- 方式二 -->
    <!-- 替代默认使用cookie,这里使用的是httpheader
    <bean id="httpSessonStrategy" class="org.springframework.session.web.http.HeaderHttpSessionStrategy"/> 
    -->
    <!-- 将session放入redis
    <bean id="redisHttpSessionConfiguration" class="org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration">
        <property name="maxInactiveIntervalInSeconds" value="${session.maxInactiveIntervalInSeconds}" />
        <property name="httpSessionStrategy" ref="httpSessonStrategy"/>
    </bean>
     -->
</beans>