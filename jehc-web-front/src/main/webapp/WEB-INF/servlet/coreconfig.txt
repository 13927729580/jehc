<!-- spring监听器配置 -->
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener
    </listener-class>
  </listener>
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath*:/jehc/xtmodules/xtcore/sources/spring/*.xml</param-value>
  </context-param>
  
  <!-- 编码过滤器配置 -->
  <filter>
    <filter-name>CharacterEncodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>utf-8</param-value>
    </init-param>
    <init-param>
      <param-name>forceEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>CharacterEncodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  
  <!-- springmvc视图转发器配置 -->
  <servlet>
    <servlet-name>dispatcherServlet</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:/jehc/xtmodules/xtcore/sources/spring/springmvc.xml</param-value>
    </init-param>
  </servlet>
  <servlet-mapping>
    <servlet-name>dispatcherServlet</servlet-name>
    <url-pattern>/</url-pattern>
  </servlet-mapping>
  
  <!-- session超时配置 -->
  <session-config>
    <session-timeout>30</session-timeout>
  </session-config>
  
  
 <!-- 配置log4j -->
<context-param>
	<param-name>log4jConfigLocation</param-name>
	<param-value>classpath:/jehc/xtmodules/xtcore/sources/log4j.properties</param-value>
</context-param>
<context-param>
<param-name>webAppRootKey</param-name>
<param-value>webName.root</param-value>
</context-param>
<listener>
	<display-name>log4jConfigLocation</display-name>
	<listener-class>
		org.springframework.web.util.Log4jConfigListener
	</listener-class>
</listener>
  
  <!-- GZIPFilter压缩定义 设置此项时tk-filters.properties的GZIPFilter.Enabled=true才可用-->
<filter>
	<filter-name>GZIPFilter</filter-name>
	<filter-class>
		com.tacitknowledge.filters.gzipfilter.GZIPFilter
	</filter-class>
</filter>
<!-- GZIPFilter 设置自己想要压缩的文件类型-->
<filter-mapping>
	<filter-name>GZIPFilter</filter-name>
	<url-pattern>*.js</url-pattern>
</filter-mapping>
<!-- <filter-mapping>
	<filter-name>GZIPFilter</filter-name>
	<url-pattern>*.jsp</url-pattern>
	</filter-mapping> -->
<filter-mapping>
	<filter-name>GZIPFilter</filter-name>
	<url-pattern>*.css</url-pattern>
</filter-mapping>

<filter-mapping>
	<filter-name>GZIPFilter</filter-name>
	<url-pattern>*.html</url-pattern>
</filter-mapping>
<filter-mapping>
	<filter-name>GZIPFilter</filter-name>
	<url-pattern>*.gif</url-pattern>
</filter-mapping>
<filter-mapping>
	<filter-name>GZIPFilter</filter-name>
	<url-pattern>*.png</url-pattern>
</filter-mapping>
<filter-mapping>
	<filter-name>GZIPFilter</filter-name>
	<url-pattern>*.jpg</url-pattern>
</filter-mapping>



<!-- CacheFilter缓存定义 设置此项时tk-filters.properties的CacheFilter.Enabled=true才可用 -->
<filter>
	<filter-name>CacheFilter</filter-name>
	<filter-class>
		com.tacitknowledge.filters.cache.CacheHeaderFilter
	</filter-class>
</filter>
<!-- CacheFilter 设置自己想要缓存的文件类型-->
<filter-mapping>
	<filter-name>CacheFilter</filter-name>
	<url-pattern>*.gif</url-pattern>
</filter-mapping>
<filter-mapping>
	<filter-name>CacheFilter</filter-name>
	<url-pattern>*.jpg</url-pattern>
</filter-mapping>
<filter-mapping>
	<filter-name>CacheFilter</filter-name>
	<url-pattern>*.png</url-pattern>
</filter-mapping>
<filter-mapping>
	<filter-name>CacheFilter</filter-name>
	<url-pattern>*.js</url-pattern>
</filter-mapping>
<filter-mapping>
	<filter-name>CacheFilter</filter-name>
	<url-pattern>*.css</url-pattern>
</filter-mapping>



<servlet>
	<description>验证码</description>
	<servlet-name>VerifyCodeServlet</servlet-name>
	<servlet-class>xtCore.util.VerifyCodeServlet</servlet-class>
</servlet>
<servlet-mapping>
	<servlet-name>VerifyCodeServlet</servlet-name>
	<url-pattern>/VerifyCodeServlet</url-pattern>
</servlet-mapping>

  <!-- 首页 -->
  <welcome-file-list>
    <welcome-file>index.jsp</welcome-file>
  </welcome-file-list>
  
  <!-- 启动时执行系统类 -->
<listener>
	<listener-class>
		jehc.xtmodules.xtcore.util.Init
	</listener-class>
</listener>